<DockControls:DockAbleWindowBase
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:DockControls="clr-namespace:DockControl.Controls;assembly=DockControl"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary"
		xmlns:BackgroundWorkerView="clr-namespace:MainEditor.BackgroundWorkerView"
		x:Name="MainWin" mc:Ignorable="d" x:Class="MainEditor.MainWindow"
        Title="编辑器主窗口" Height="586" Width="1090" Style="{DynamicResource {ComponentResourceKey ResourceId=DefaultWindowStyle, TypeInTargetAssembly={x:Type res:CustomResources}}}" WindowStartupLocation="CenterScreen"
		Closing="Window_Closing" Activated="Window_Activated" Deactivated="Window_Deactivated" Loaded="Window_Loaded" Unloaded="Window_Unloaded" >
    <DockControls:DockAbleWindowBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MainEditor;component/Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </DockControls:DockAbleWindowBase.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="0.936*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.963*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Menu x:Name="Menu_Main" Margin="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" ScrollViewer.VerticalScrollBarVisibility="Disabled"  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                <MenuItem Header="编辑(_E)" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <MenuItem Header="撤销" Click="MenuItem_Undo_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem Header="重做" Click="MenuItem_Redo_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                </MenuItem>
                <MenuItem x:Name="MenuItem_Tools" Header="工具(_T)" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <MenuItem x:Name="MenuItem_SVNAutoCommit" Header="版本控制自动上传" IsChecked="True" Click="MenuItem_SVNAutoCommit_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem Header="生成地图缩略图" Click="MenuItem_GenerateMap_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem Header="快捷键设置" Click="MenuItem_HotkeySet_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                </MenuItem>
                <MenuItem Header="调试(_D)" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <MenuItem x:Name="MenuItem_HideUI" Header="隐藏UI" Click="MenuItem_HideUI_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem x:Name="MenuItem_MultiRender" Header="多线程渲染" Click="MenuItem_MultiRender_Click" IsChecked="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <!--MenuItem x:Name="MenuItem_SetOutPut" Header="是否显示输出" Click="MenuItem_SetOutPut_Click" IsChecked="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/-->
                    <MenuItem Header="寻不到路直接向目标行走" IsChecked="{Binding DirectMoveWhenNotFindPath, ElementName=MainWin, Mode=TwoWay}" IsCheckable="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem x:Name="MenuItem_CaptureMRT" Header="捕获MRT" Click="MenuItem_CaptureMRT_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem x:Name="MenuItem_ShowHurtBox" Header="是否显示伤害范围" Click="MenuItem_ShowHurtBox_Click" IsChecked="False" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <!--MenuItem x:Name="MenuItem_HideFPS" Header="隐藏输出信息" Click="MenuItem_HideFPS_Click" IsChecked="False" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/-->
                    <MenuItem x:Name="MenuItem_CheckMemoryState" Header="检测内存越界" Click="MenuItem_CheckMemoryState_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem x:Name="MenuItem_UpdateShaderCache" Header="生成ShaderCache" Click="MenuItem_UpdateShaderCache_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem Header="显示LineCheck辅助线" IsChecked="{Binding ShowLineCheckAssist, ElementName=MainWin, Mode=TwoWay}" IsCheckable="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                </MenuItem>
                <MenuItem Header="性能(_P)" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <MenuItem x:Name="MenuItem_NVPerf" Header="是否启用NVPerf" Click="MenuItem_NVPerf_Click" IsChecked="False" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem x:Name="MenuItem_CaptureBottleneck" Header="分析当前帧的瓶颈" Click="MenuItem_CaptureBottleneck_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem x:Name="MenuItem_CaptureUtilization" Header="分析当前帧的利用率" Click="MenuItem_CaptureUtilization_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                </MenuItem>
                <MenuItem Header="窗口" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <MenuItem x:Name="MenuItem_GameAssist" Header="地图编辑辅助窗口" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" IsCheckable="True" IsChecked="{Binding ShowGameAssistWindow, ElementName=MainWin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </MenuItem>
                <MenuItem Header="帮助(_H)" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <MenuItem x:Name="MenuItem_PluginManager" Header="插件管理器..." Click="MenuItem_PluginManager_Click" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                </MenuItem>
            </Menu>
            <StackPanel x:Name="StackPanel_EditorArrangementShow" Orientation="Horizontal" Grid.Column="1" />
            <Menu Margin="0" d:LayoutOverrides="GridBox" Grid.Column="2" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                <MenuItem Header="布局 》" Margin="2" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <StackPanel x:Name="StackPanel_EditorArrangement" />
                    <Separator Style="{DynamicResource {ComponentResourceKey ResourceId=MenuSeparatorStyle, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem Header="存储布局" Click="MenuItem_SaveEditorArrangement_Clicked" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem Header="另存为布局..." Click="MenuItem_SaveAsEditorArrangement_Clicked" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem Header="删除布局..." Click="MenuItem_DeleteEditorArrangement_Clicked" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <MenuItem Header="重置布局" Click="MenuItem_ResetArrangement_Clicked" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuItem_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                </MenuItem>
            </Menu>
        </Grid>
        <Grid x:Name="MainGrid" Margin="0" Grid.Row="1"/>
        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StatusBar Margin="0" Background="{DynamicResource {ComponentResourceKey ResourceId=ControlBackground, TypeInTargetAssembly={x:Type res:CustomResources}}}" Foreground="White"/>

            <BackgroundWorkerView:BackgroundWorkerViewer d:LayoutOverrides="Height" Grid.Column="1"/>

        </Grid>
    </Grid>
</DockControls:DockAbleWindowBase>
