<UserControl x:Class="TerrainEditor.TerrainGridPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
		<SolidColorBrush x:Key="ToolBarButtonHoverBorder" Color="#3399FF"/>
		<SolidColorBrush x:Key="ToolBarButtonChecked" Color="#FFAAAAAA"/>
		<SolidColorBrush x:Key="ToolBarButtonHover" Color="#C2E0FF"/>
		<SolidColorBrush x:Key="ToolBarButtonPressedBorder" Color="#3399FF"/>
		<SolidColorBrush x:Key="ToolBarButtonPressed" Color="#99CCFF"/>
		<Style x:Key="ToolbarRadioButtonStyle" TargetType="{x:Type RadioButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Padding" Value="2"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
								<Setter Property="Background" Value="{StaticResource ToolBarButtonChecked}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
								<Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
								<Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="true"/>
									<Condition Property="IsChecked" Value="true"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
								<Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsKeyboardFocused" Value="true"/>
									<Condition Property="IsChecked" Value="true"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
								<Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
							</MultiTrigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
								<Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
    <Grid>
    	<Grid.RowDefinitions>
    		<RowDefinition Height="Auto"/>
    		<RowDefinition Height="Auto"/>
    	</Grid.RowDefinitions>
		<Grid ClipToBounds="True" Grid.Row="1">
			<Canvas x:Name="Canvas_TerrainLevels" HorizontalAlignment="Left" Height="1024" VerticalAlignment="Top" Width="1024" Background="#02000000" MouseDown="Canvas_MouseDown" MouseMove="Canvas_MouseMove" MouseWheel="Canvas_MouseWheel" MouseUp="Canvas_MouseUp">
				<Image x:Name="Image_TerrainLevels" Height="1024" Width="1024" Canvas.Left="0" Canvas.Top="0" HorizontalAlignment="Left" VerticalAlignment="Top" />
				<Grid x:Name="Grid_Camera" Height="100" Width="100" RenderTransformOrigin="0.5,0.5" Canvas.Left="54.333" Canvas.Top="55">
					<Grid.RenderTransform>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform/>
							<TranslateTransform X="-50" Y="-50"/>
						</TransformGroup>
					</Grid.RenderTransform>
					<Ellipse Width="20" Height="20" Fill="#FF00FF10" Stroke="Black" StrokeThickness="2" />
					<!--ed:Arc x:Name="Arc_Camera" ArcThickness="1" ArcThicknessUnit="Percent" EndAngle="120" Stretch="None" Panel.ZIndex="1" RenderTransformOrigin="0.5,0.5" StartAngle="60">
						<ed:Arc.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform x:Name="ArcCameraRotate" Angle="0"/>
								<TranslateTransform/>
							</TransformGroup>
						</ed:Arc.RenderTransform>
						<ed:Arc.Fill>
							<RadialGradientBrush Center="0,0.5" RadiusX="1" RadiusY="1" GradientOrigin="0,0.5">
								<GradientStop Color="#FF00FF10" Offset="0.004"/>
								<GradientStop Offset="1"/>
								<GradientStop Color="#FF00FF10" Offset="0.27"/>
							</RadialGradientBrush>
						</ed:Arc.Fill-->
				</Grid>
			</Canvas>
			<Image x:Name="Image_Background" HorizontalAlignment="Left" Height="1024" VerticalAlignment="Top" Width="1024"/>
		</Grid>
        <ToolBar Margin="0" IsOverflowOpen="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ToolBarStyle_Default}}">
			<RadioButton GroupName="EditMode" Tag="0" IsChecked="True" Checked="EditMode_Checked" Width="32" Height="32" Style="{DynamicResource ToolbarRadioButtonStyle}">
				<Image Source="/TerrainEditor;component/Icon/Camera.png" />
			</RadioButton>
			<RadioButton GroupName="EditMode" Tag="1" Checked="EditMode_Checked" Width="32" Height="32" Style="{DynamicResource ToolbarRadioButtonStyle}">
                <Image Source="/ResourceLibrary;component/Icon/Terrain/PaintBrush.png" />
			</RadioButton>
			<RadioButton GroupName="EditMode" Tag="2" Checked="EditMode_Checked" Width="32" Height="32" Style="{DynamicResource ToolbarRadioButtonStyle}">
				<!--Image Source="/TerrainEditor;component/Icon/PaintErase.png" /-->
			</RadioButton>
			<Separator />
            <Button x:Name="Button_MapSnapshot" Content="生成场景缩略图" Foreground="White" Click="Button_MapSnapshot_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ButtonStyle_Default}}"/>
		</ToolBar>
	</Grid>
</UserControl>
