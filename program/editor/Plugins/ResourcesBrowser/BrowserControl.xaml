<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:ResourcesBrowser" 
			 xmlns:searchBox="clr-namespace:SearchBox;assembly=EditorControlLib"
			 xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary"			
             xmlns:WPG="clr-namespace:WPG;assembly=WPG" x:Name="userControl" x:Class="ResourcesBrowser.BrowserControl"			
             mc:Ignorable="d" 
             d:DesignHeight="404" d:DesignWidth="623" Loaded="UserControl_Loaded" 
             Background="{DynamicResource {ComponentResourceKey ResourceId=ControlBackground, TypeInTargetAssembly={x:Type res:CustomResources}}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ResourcesBrowser;component/Themes/Generic.xaml" />
                <ResourceDictionary>
                    <Style x:Key="ListBoxItemStyle_ResourceItem" TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="{StaticResource DefaultBackground}"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="2,0,0,0"/>
                        <Setter Property="Margin" Value="3" />
                        <Setter Property="AllowDrop" Value="True" />
                        <EventSetter Event="UIElement.PreviewMouseDown" Handler="ListBox_ResourceItem_PreviewMouseDown" />
                        <EventSetter Event="UIElement.MouseMove" Handler="ListBox_ResourceItem_MouseMove" />
                        <EventSetter Event="UIElement.MouseUp" Handler="ListBox_ResourceItem_MouseUp" />
                        <EventSetter Event="UIElement.MouseDown" Handler="ListBox_ResourceItem_MouseDown" />
                        <EventSetter Event="UIElement.DragEnter" Handler="ListBox_ResourceItem_DragEnter" />
                        <EventSetter Event="UIElement.DragLeave" Handler="ListBox_ResourceItem_DragLeave" />
                        <EventSetter Event="UIElement.DragOver" Handler="ListBox_ResourceItem_DragOver" />
                        <EventSetter Event="UIElement.Drop" Handler="ListBox_ResourceItem_Drop" />
                    </Style>
                    <ContextMenu x:Key="CreateMenu" Placement="Bottom" Style="{DynamicResource {ComponentResourceKey ResourceId=ContextMenu_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Background="{DynamicResource {ComponentResourceKey ResourceId=ContainerBackground, TypeInTargetAssembly={x:Type res:CustomResources}}}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.172*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="0.82*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <GridSplitter Style="{DynamicResource {ComponentResourceKey ResourceId=GridSplitterStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Grid.Column="1" HorizontalAlignment="Stretch" Margin="0" Grid.Row="0" VerticalAlignment="Stretch" Grid.RowSpan="2" Width="3" ShowsPreview="True"/>
            <Grid Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ToolBar x:Name="ToolBar_Main" HorizontalAlignment="Stretch" Margin="0" Style="{DynamicResource {ComponentResourceKey ResourceId=ToolBarStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" >
                    <Button ToolTip="导入" Click="Button_Import_Click" >
                        <Image Source="/ResourceLibrary;component/Icon/File/ImportRes.png" />
                    </Button>
                    <ToggleButton IsChecked="{Binding SearchSubFolder, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="显示当前目录及其子目录的资源" Style="{DynamicResource {ComponentResourceKey ResourceId=ToolBarToggleButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" VerticalAlignment="Center">
                        <Image Source="/ResourceLibrary;component/Icon/File/includeSubFolder.png" />
                    </ToggleButton>
                    <searchBox:SearchBox Margin="2" Width="150" SearchText="{Binding FilterString, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Separator/>
                    <ToggleButton x:Name="ToggleButton_Create" ToolTip="创建资源" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Loaded="ToggleButton_Create_Loaded" Style="{DynamicResource {ComponentResourceKey ResourceId=ToolBarToggleButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/ResourceLibrary;component/Icon/File/new.png" />
                            <Path Data="M15,10 L20,10 17.5,11.85949 z" Fill="#FFBDBDBD" Height="3.898" Stretch="Fill" Width="8" VerticalAlignment="Center" Margin="-3,0,0,0" Stroke="#FF3A3A3A" StrokeThickness="0.5"/>
                        </StackPanel>
                    </ToggleButton>
                    <Button ToolTip="复制选中的资源" Click="Button_CopySelected_Click">
                        <Image Source="/ResourceLibrary;component/Icon/File/copy.png" />
                    </Button>
                    <Button ToolTip="保存选中的资源" Click="Button_SaveSelected_Click">
                        <Image Source="/ResourceLibrary;component/Icon/File/save.png" />
                    </Button>
                    <Button ToolTip="全部保存" Click="Button_SaveAll_Click">
                        <Image Source="/ResourceLibrary;component/Icon/File/saveall.png" />
                    </Button>
                    <Button ToolTip="删除选中的资源" Click="Button_DeleteSelected_Click">
                        <Image Source="/ResourceLibrary;component/Icon/File/delete.png" />
                    </Button>
                </ToolBar>
                <ToggleButton x:Name="toggleButton" Grid.Column="1" Margin="5" Width="35" Style="{DynamicResource {ComponentResourceKey ResourceId=ToggleButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <Grid>
                        <TextBlock Text="筛选" />
                        <Popup Grid.Column="1" IsOpen="{Binding IsChecked, ElementName=toggleButton}" StaysOpen="False" AllowsTransparency="True" >
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" Background="{DynamicResource {ComponentResourceKey ResourceId=ContainerBackground, TypeInTargetAssembly={x:Type res:CustomResources}}}" Opacity="0.8">
                                    <CheckBox IsChecked="{Binding IsCheckedAll,ElementName=userControl}" Content="" Margin="7,4,6,4" d:LayoutOverrides="Width, Height" VerticalAlignment="Center"/>                                    
                                    <TextBlock Text="全选" d:LayoutOverrides="Height" VerticalAlignment="Center" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                                </StackPanel>
                                <ListBox x:Name="ListBox_FilterItems" Style="{DynamicResource {ComponentResourceKey ResourceId=ListBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Opacity="0.8" Margin="0,-1,0,0">
                                    <ListBox.Effect>
                                        <DropShadowEffect BlurRadius="4"/>
                                    </ListBox.Effect>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="local:FilterResourceItem">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>
                                                <CheckBox x:Name="checkBox" IsChecked="{Binding IsChecked, Mode=TwoWay}" Content="" Margin="2" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" />
                                                <Image x:Name="image" Source="{Binding Icon}" Grid.Column="1" Margin="2" Width="24" Height="24"/>
                                                <TextBlock x:Name="textBlock" Text="{Binding ResourceTypeName}" Grid.Column="2" Margin="2,2,8,2" TextWrapping="Wrap" d:LayoutOverrides="Height" VerticalAlignment="Center" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                            <!--ScrollViewer MaxHeight="300" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ScrollViewerStyle_Default}}">
                                <StackPanel Background="#33FFFFFF" Height="500" Margin="0">
                                    <StackPanel.Effect>
                                        <DropShadowEffect BlurRadius="3" ShadowDepth="3"/>
                                    </StackPanel.Effect>
                                    <TextBlock Text="aaa" />
                                    <TextBlock Text="aaa" />
                                </StackPanel>
                            </-->
                        </Popup>
                    </Grid>
                </ToggleButton>
            </Grid>
            <TreeView Grid.Row="1" x:Name="TreeView_Folders" Height="Auto" Margin="0" Style="{DynamicResource {ComponentResourceKey ResourceId=TreeViewStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"
				TreeViewItem.Expanded="TreeViewItem_Expanded" TreeViewItem.Selected="TreeViewItem_Selected" TreeViewItem.Unselected="TreeViewItem_UnSelected" HorizontalContentAlignment="Stretch" />
            <Grid Grid.Column="2" Grid.Row="1" Grid.IsSharedSizeScope="True" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="Grid_ListTitle" Visibility="Collapsed" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ResourceIcon"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ResourceType"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="1*" SharedSizeGroup="ResourceName"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="图标" Margin="5,2" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    </StackPanel>
                    <GridSplitter Style="{DynamicResource {ComponentResourceKey ResourceId=GridSplitterStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" HorizontalAlignment="Stretch" Grid.Column="1"/>
                    <StackPanel Grid.Column="2" Orientation="Horizontal" MouseLeftButtonDown="StackPanel_ListType_MouseLeftButtonDown">
                        <TextBlock Text="类型" Margin="5,2,2,2" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" />
                        <Path x:Name="Path_ListType" Data="M18.833333,7.5 L23.437501,7.4788332 21.022394,13.209648 z" Fill="#FFF4F4F5" Margin="3,0" Stretch="Fill" Width="5.604" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Stroke="White" Visibility="Hidden">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="TypePathScale" ScaleY="1"/>
                                    <SkewTransform AngleY="0" AngleX="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </StackPanel>
                    <GridSplitter Style="{DynamicResource {ComponentResourceKey ResourceId=GridSplitterStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" HorizontalAlignment="Stretch" Grid.Column="3"/>
                    <StackPanel Orientation="Horizontal" Grid.Column="4" MouseLeftButtonDown="StackPanel_ListName_MouseLeftButtonDown">
                        <TextBlock Text="名称" Margin="5,2,2,2" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" />
                        <Path x:Name="Path_ListName" Data="M18.833333,7.5 L23.437501,7.4788332 21.022394,13.209648 z" Fill="#FFF4F4F5" Margin="3,0" Stretch="Fill" Width="5.604" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Stroke="White">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="NamePathScale" ScaleY="1"/>
                                    <SkewTransform AngleY="0" AngleX="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </StackPanel>
                </Grid>
                <ListBox x:Name="ListBox_Resources" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Extended" Style="{DynamicResource {ComponentResourceKey ResourceId=ListBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" 
					ItemContainerStyle="{DynamicResource ListBoxItemStyle_ResourceItem}"
					ItemsSource="{Binding CurrentResources, ElementName=userControl}" 
					ItemTemplate="{StaticResource ResourceInfoDataTemplate_Wrap}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" SelectionChanged="ListBox_Resources_SelectionChanged" Grid.Row="1" DragEnter="ListBox_Resources_DragEnter" DragOver="ListBox_Resources_DragOver" AllowDrop="True" Drop="ListBox_Resources_Drop" DragLeave="ListBox_Resources_DragLeave">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <local:VirtualizingWrapPanel ChildWidth="150" ChildHeight="195" Loaded="VirtualizingWrapPanel_Loaded"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <GridSplitter Style="{DynamicResource {ComponentResourceKey ResourceId=GridSplitterStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Grid.Column="1" HorizontalAlignment="Stretch" Margin="0" Width="3" Visibility="{Binding Visibility, ElementName=Grid_Extend}" ShowsPreview="True" Grid.RowSpan="2"/>
                <Grid x:Name="Grid_Extend" Grid.Column="2" Grid.RowSpan="2" Visibility="Collapsed">
                </Grid>
            </Grid>
            <Grid Margin="0" Grid.Row="2" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StatusBar Background="{DynamicResource {ComponentResourceKey ResourceId=ControlBackground, TypeInTargetAssembly={x:Type res:CustomResources}}}" d:LayoutOverrides="Height">
                    <Image Source="/ResourceLibrary;component/Icon/File/folder_open.png" Width="24" Height="24" />
                    <StackPanel x:Name="StackPanel_Folders" Margin="2,2,5,2" Orientation="Horizontal" />
                    <!--TextBlock Text="{Binding CurrentFolder, ElementName=userControl}" Margin="5,2" Foreground="White" /-->
                </StatusBar>
                <TextBlock Text="{Binding SourceCountString, ElementName=userControl}" Margin="8,2" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Center" />
                <StackPanel Grid.Column="1" Orientation="Horizontal" >
                    <RadioButton ToolTip="列表显示" Margin="5,2,2,2" Style="{DynamicResource {ComponentResourceKey ResourceId=RadioButtonStyle_Toggle, TypeInTargetAssembly={x:Type res:CustomResources}}}" VerticalAlignment="Center" GroupName="ResourceListShowType" Checked="RadioButton_List_Checked">
                        <Image Source="/ResourceLibrary;component/Icon/View_List.png" Width="24" Height="24"/>
                    </RadioButton>
                    <RadioButton ToolTip="平铺显示" Margin="2" Style="{DynamicResource {ComponentResourceKey ResourceId=RadioButtonStyle_Toggle, TypeInTargetAssembly={x:Type res:CustomResources}}}" VerticalAlignment="Center" GroupName="ResourceListShowType" IsChecked="True" Checked="RadioButton_Tile_Checked">
                        <Image Source="/ResourceLibrary;component/Icon/View_Pic.png" Width="24" Height="24" />
                    </RadioButton>
                    <Slider x:Name="Slider_ResourceItemSize" Margin="2" ValueChanged="Slider_ResourceSnapSize_ValueChanged" Maximum="2.5" Minimum="0.8" Value="1" Width="100" SmallChange="0.01" VerticalAlignment="Center" 
                            Style="{DynamicResource {ComponentResourceKey ResourceId=SliderStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                </StackPanel>
            </Grid>

            <Grid Grid.RowSpan="3" Grid.ColumnSpan="3" Background="#B2000000" Visibility="{Binding ProcessingVisible, ElementName=userControl}" d:IsHidden="True">
                <Grid Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" VerticalAlignment="Center" Margin="8,2" Text="{Binding ProcessingInfo, ElementName=userControl}"/>
                    <ProgressBar Height="10" Grid.RowSpan="2" Grid.Row="1" Value="{Binding ProcessPercent, ElementName=userControl}" Maximum="1" SmallChange="0.001" MinWidth="100" />
                </Grid>
            </Grid>
        </Grid>
    </Border>
</UserControl>
