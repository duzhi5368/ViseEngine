#include "VInc.fxx"
#include "inport.dummy"

struct V3D_PS_OUT
{
//    float4	Color	: COLOR0;
    float4	Color	: COLOR0;
};

VertexOutput vs_main( VertexInput Input )
{
	VertexTrans vssem = (VertexTrans)0;
	VertexTransInit ( Input, vssem );

	// VS do
	V3D_VS_Modifiers ( vssem );

	// Semantic 2 VS-Out
	VertexOutput Output =(VertexOutput)0;
	VertexTransToVertexOutput ( vssem, Output );

	Output.mDiffuseUV.xy = vssem.mDiffuseUV.xy;

#ifdef D3D_EFFECT
	vssem.mLocalPos.xy += float2(-1,1) / GUIScreenSize;
#else
	//Output.mDiffuseUV.y = 1 - Output.mDiffuseUV.y;
#endif

	Output._Pos0		= vssem.mLocalPos;
	Output.mProjPos		= vssem.mLocalPos;
    return Output;
}

V3D_PS_OUT	ps_main( PixelInput Input )
{
	PixelMaterialTrans pssem = (PixelMaterialTrans)0;
	PixelInputToMaterial( Input, pssem );

	V3D_PS_OUT o = (V3D_PS_OUT)0;

	DoMaterial(pssem);
	if(g_AlphaTest.x==1)
	{
		if(pssem.mDiffuseColor.a < g_AlphaTest.y)
			discard;
	}

	o.Color = pssem.mDiffuseColor;

	return o;
}


#ifdef D3D_EFFECT
technique tech
{
	pass p0
	{
		VertexShader = compile vs_3_0 vs_main();
		PixelShader = compile ps_3_0 ps_main();
	}
}
#endif