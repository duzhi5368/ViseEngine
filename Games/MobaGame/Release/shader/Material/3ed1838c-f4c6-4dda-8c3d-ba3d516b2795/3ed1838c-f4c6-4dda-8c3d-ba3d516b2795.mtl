/*Material

<?xml version="1.0" encoding="utf-16"?>
<Material Name="ColorMaterial" Require="DiffuseUV" Main="DoMaterial" ExtendString="" Id="3ed1838c-f4c6-4dda-8c3d-ba3d516b2795" Ver="2">
  <DefaultTechnique Name="DefaultTech" Ver="2" AlphaRef="0" CullMode="CCW" ZDisable="0" ZWriteDisable="0" WireFrame="0" UseSystemMaterialFilterType="1" AlphaType="Disable" BlendOp="Add" BlendSrc="SrcAlpha" BlendDest="InvSrcAlpha" BillboardType="Disable" ZCmpFunc="LessEqual" HostMaterialId="3ed1838c-f4c6-4dda-8c3d-ba3d516b2795" Id="b3d36130-8e37-4396-bd22-441b399c171a" AcceptDecal="0" AcceptLight="1" StencilEnable="1" StencilCmp="Always" StencilRef="1" StencilMask="0" StencilWriteMask="0" StencilFailOp="Keep" StencilZFailOp="Keep" StencilPassOp="Replace" DepthBias="0" SlopeScaleDepthBias="0">
    <ShaderVar>
      <GDiffuse Type="float4" Value="1,1,1,0" />
      <GEmissive Type="float4" Value="1,1,1,1" />
      <GSpecular Type="float4" Value="0,0,0,0" />
    </ShaderVar>
  </DefaultTechnique>
</Material>
*/



float4 GDiffuse;

#ifdef ByLayerBased
void DoMaterial(inout PixelMaterialTrans pssem)
#else
void	DoMaterial(inout PixelMaterialTrans pssem)
#endif
{


    pssem.mDiffuseColor = GDiffuse;

}
