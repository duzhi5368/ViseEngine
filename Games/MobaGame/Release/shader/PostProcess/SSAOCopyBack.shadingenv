#include "VInc.fxx"
#include "inport.dummy"
#include "CommonDeferredShadingFunc.fxh"

float2		g_InvScreenSize;
float2		g_ScreenSize;
texture 		RT_SRC;
sampler2D Samp_RT_SRC = sampler_state
{
	Texture = <RT_SRC>;
    MipFilter = NONE;
    MinFilter = POINT;
    MagFilter = POINT;
    AddressU = CLAMP;
    AddressV = CLAMP;
};

struct VSInput
{
	float3 Pos		: LOCALPOS;
	float2 UV		: DIFFUSEUV;
};
VSInput dummyVSIn;

struct VSOutput
{
    float4 Pos		: POSITION;
    float2 UV		: TEXCOORD0;
};
struct PSOutput
{
    float4	Color	: COLOR0;
};

VSOutput vs_main( VSInput Input )
{
	VSOutput o=(VSOutput)0;
	o.Pos	= float4(Input.Pos,1);
	o.Pos.xy += float2(-1,1) * g_InvScreenSize;
	o.UV		= Input.UV;
    return o;
}

PSOutput	ps_main( VSOutput Input )
{
	PSOutput o = (PSOutput)0;

	float2 uv = Input.UV;

//	o.Color.a = vise_tex2D(Samp_RT_SRC, uv).r;
	o.Color.a = vise_tex2D(Samp_RT_SRC, uv).a;

	return o;
}

technique SSAOCopyBack
{
   pass p0
   {
		VertexShader = compile vs_3_0 vs_main();
		PixelShader = compile ps_3_0 ps_main();
	}
}
